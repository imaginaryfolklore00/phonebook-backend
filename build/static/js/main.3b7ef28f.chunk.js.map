{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Contact.js","components/ShowContacts.js","services/contacts.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","filterName","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Contact","contact","deleteContact","name","number","onClick","ShowContacts","contactsToShow","map","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Error","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","filter","toLowerCase","includes","useEffect","contactService","initialContacts","event","target","preventDefault","find","c","window","confirm","changedContact","returnedContact","person","setTimeout","catch","error","updateContact","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b7ef28f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterName, handleFilterChange }) => \r\n(\r\n    <div>\r\n        filter shown with\r\n        <input\r\n            value={filterName}\r\n            onChange={handleFilterChange}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) =>\r\n(\r\n    <form onSubmit={props.addContact}>\r\n        <div>\r\n            name: \r\n            <input \r\n            value={props.newName}\r\n            onChange={props.handleNameChange}\r\n            />\r\n        </div>\r\n        <div>\r\n            number: \r\n            <input\r\n            value={props.newNumber} \r\n            onChange={props.handleNumberChange}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Contact = ({ contact, deleteContact }) => \r\n(\r\n    <li>\r\n        {contact.name} {contact.number}\r\n        <button onClick={deleteContact}>delete</button>\r\n    </li>\r\n)\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst ShowContacts = ({ contactsToShow, deleteContact }) =>\r\n(\r\n    <ul>\r\n        {contactsToShow.map(contact => <Contact key={contact.name} contact={contact} deleteContact={() => deleteContact(contact.id, contact.name)} />)}\r\n    </ul>\r\n)\r\n\r\nexport default ShowContacts","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst delete_db = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, delete_db }","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='notification'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Error = ({message}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport ShowContacts from './components/ShowContacts'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilterName(event.target.value)\n\n  const updateContact = (contact, newNumber) => {\n    const changedContact = {...contact, number: newNumber}\n\n    contactService\n      .update(contact.id, changedContact)\n      .then(returnedContact => {\n        setPersons(persons.map(person => person.id !== contact.id ? person : returnedContact))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`Updated ${returnedContact.name}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      .catch (error => {\n        setErrorMessage(`${changedContact.name} was already removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  } \n\n  const addContact = (event) => {\n    event.preventDefault()\n\n    const contact = persons.find(c => c.name === newName)\n\n    if (contact) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n      {\n        updateContact(contact, newNumber)\n      }\n    }\n\n    else {\n      const contactObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      contactService\n        .create(contactObject)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage(`Added ${returnedContact.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n      }\n  }\n\n  const deleteContact = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      contactService\n      .delete_db(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n    }\n  }\n  \n  const contactsToShow = persons.filter(contact => contact.name.toLowerCase().includes(filterName.toLowerCase()))\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n      <h3>Add contact</h3>\n      <PersonForm newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} addContact={addContact} />\n      <h3>Numbers</h3>\n      <ShowContacts contactsToShow={contactsToShow} deleteContact={deleteContact}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}